<#@ template language="C#" #>
using System.Runtime.InteropServices;
namespace netgraph.core.library {
<# for(int i=0;i< Platforms.Length;i++ ){ #>
    internal class <#= Platforms[i] #>NativeProvider : INativeNetgraph
    {
        private const string DLL_NAME = @"<#= Libraries[i] #>";
        
        [DllImport(DLL_NAME)]
        static extern int is_igraph_thread_safe();
        [DllImport(DLL_NAME)]
        static extern FoundIsomorphisms get_all_subisos(
            NatGraph target,
            NatGraph pattern,
            int are_graphs_directed
            );

        public int IsIgraphThreadSafe(){
            return is_igraph_thread_safe();
        }

        public FoundIsomorphisms GetAllIsomorphisms(
            NatGraph target,
            NatGraph pattern,
            int are_graphs_directed
            ){
                return get_all_subisos(
                    target,
                    pattern,
                    are_graphs_directed);
        }
    }
    <# } #>
}
<#+
string[] Platforms = new string[] { "Linux64" };
string[] Libraries = new string[] { "native/linux-x64/libNetgraphNative.so" };
#>