<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId>Netgraph</PackageId>
    <Title>C# bindings to igraph</Title>
    <Authors>Piotr Cybulski</Authors>
    <PackageVersion>1.0.0</PackageVersion>
    <TargetFramework>net5.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PackageTags>graph igraph</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Description>
      A C# library providing a (small) subset of igraph library functionality.
    </Description>
    <PackageProjectUrl>https://github.com/zajer/netgraph.git</PackageProjectUrl> 
    <RepositoryUrl>https://github.com/zajer/netgraph.git</RepositoryUrl> 
    <RepositoryType>git</RepositoryType> 
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  
  <ItemGroup>
    <None Include="runtimes\linux-x64\native\libNetgraphNative.so" Pack="true" PackagePath="runtimes\linux-x64\native\">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </None>
    <None Include="runtimes\win-x64\native\libNetgraphNative.dll" Pack="true" PackagePath="runtimes\win-x64\native\">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </None>
    <None Include="runtimes\win-x64\native\libigraph.dll" Pack="true" PackagePath="runtimes\win-x64\native\">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </None>
  </ItemGroup>

  <Target Name="Generating files from the tt template" BeforeTargets="BeforeBuild">
    <Message Text="Generating native functionality provider classes from template." Importance="high"></Message>
    <Exec WorkingDirectory="$(ProjectDir)" Command="t4 NativeProvidersTemplate.tt -o NativeProviders.Generated.cs" Outputs="NativeProviders.Generated.cs">
      <Output ItemName="Generated" TaskParameter="Outputs" />
    </Exec>
    <ItemGroup>
      <Compile  Include="@(Generated)" 
                Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(BaseIntermediateOutputPath)**;$(BaseOutputPath)**;@(Compile)" />
    </ItemGroup>
  </Target>

  <Target Name="Deleting files generated during build" AfterTargets="Clean">
    <ItemGroup>
      <FilesToDelete Include="*.Generated.cs"/>
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" >
      <Output TaskParameter="DeletedFiles" ItemName="DeletedList"/>
    </Delete>
  </Target>

</Project>
